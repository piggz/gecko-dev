From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Raine Makelainen <raine.makelainen@jolla.com>
Date: Wed, 19 Aug 2020 09:36:29 +0300
Subject: [PATCH] [sailfishos][gecko] Fix embedlite building. JB#50505

Use MOZ_EMBEDLITE for embedlite integration

All random integration points should be part of this patch.

[sailfishos][embedlite] Bring back tookit/xre changes

Sha1:  367d2afdda4426652aa403d256fd4c17273dffe0
Subject: Implemented XPCOM initialization in Process backend

Signed-off-by: Raine Makelainen <raine.makelainen@jolla.com>
---
 dom/gamepad/moz.build            |  1 +
 gfx/thebes/gfxPlatform.cpp       |  3 +++
 netwerk/protocol/gio/moz.build   |  7 +++++++
 toolkit/xre/moz.build            |  1 +
 toolkit/xre/nsEmbedFunctions.cpp | 36 +++++++++++++++++++++++++++++---
 5 files changed, 45 insertions(+), 3 deletions(-)

diff --git a/dom/gamepad/moz.build b/dom/gamepad/moz.build
index 7192a02fc088..62f9d8da3fbf 100644
--- a/dom/gamepad/moz.build
+++ b/dom/gamepad/moz.build
@@ -82,3 +82,4 @@ CFLAGS += CONFIG['GLIB_CFLAGS']
 CFLAGS += CONFIG['MOZ_DBUS_GLIB_CFLAGS']
 CXXFLAGS += CONFIG['GLIB_CFLAGS']
 CXXFLAGS += CONFIG['MOZ_DBUS_GLIB_CFLAGS']
+OS_LIBS += CONFIG['GLIB_LIBS']
diff --git a/gfx/thebes/gfxPlatform.cpp b/gfx/thebes/gfxPlatform.cpp
index bdd887be5fd4..4f560f80d0f7 100644
--- a/gfx/thebes/gfxPlatform.cpp
+++ b/gfx/thebes/gfxPlatform.cpp
@@ -88,6 +88,9 @@
 #include "qcms.h"
 
 #include "imgITools.h"
+#if defined(MOZ_EMBEDLITE)
+#include "mozilla/embedlite/EmbedLiteAppProcessParent.h"
+#endif
 
 #include "plstr.h"
 #include "nsCRT.h"
diff --git a/netwerk/protocol/gio/moz.build b/netwerk/protocol/gio/moz.build
index 7a45898537ca..81d649f4d000 100644
--- a/netwerk/protocol/gio/moz.build
+++ b/netwerk/protocol/gio/moz.build
@@ -12,6 +12,13 @@ FINAL_LIBRARY = 'xul'
 
 CXXFLAGS += CONFIG['TK_CFLAGS']
 
+CFLAGS += CONFIG['GLIB_CFLAGS']
+CXXFLAGS += CONFIG['GLIB_CFLAGS']
+OS_LIBS += CONFIG['GLIB_LIBS']
+OS_LIBS += [
+    '-lgio-2.0',
+]
+
 with Files('**'):
     BUG_COMPONENT = ('Core', 'Widget: Gtk')
 
diff --git a/toolkit/xre/moz.build b/toolkit/xre/moz.build
index 6af0de70ef94..49c7c5b516cb 100644
--- a/toolkit/xre/moz.build
+++ b/toolkit/xre/moz.build
@@ -191,6 +191,7 @@ LOCAL_INCLUDES += [
     '/dom/commandhandler',
     '/dom/ipc',
     '/dom/webbrowserpersist',
+    '/embedding/embedlite/embedprocess',
     '/testing/gtest/mozilla',
     '/toolkit/crashreporter',
     '/xpcom/build',
diff --git a/toolkit/xre/nsEmbedFunctions.cpp b/toolkit/xre/nsEmbedFunctions.cpp
index 950005c7bb70..bec682008f8a 100644
--- a/toolkit/xre/nsEmbedFunctions.cpp
+++ b/toolkit/xre/nsEmbedFunctions.cpp
@@ -74,6 +74,7 @@
 #include "mozilla/dom/ContentProcess.h"
 #include "mozilla/dom/ContentParent.h"
 #include "mozilla/dom/ContentChild.h"
+#include "EmbedLiteContentProcess.h"
 
 #include "mozilla/ipc/TestShellParent.h"
 #include "mozilla/ipc/XPCShellEnvironment.h"
@@ -226,6 +227,7 @@ const char* XRE_ChildProcessTypeToString(GeckoProcessType aProcessType) {
 namespace mozilla {
 namespace startup {
 GeckoProcessType sChildProcessType = GeckoProcessType_Default;
+bool sIsEmbedlite = false;
 }  // namespace startup
 }  // namespace mozilla
 
@@ -647,9 +649,37 @@ nsresult XRE_InitChildProcess(int aArgc, char* aArgv[],
           process = new PluginProcessChild(parentPID);
           break;
 
-        case GeckoProcessType_Content:
-          process = new ContentProcess(parentPID);
-          break;
+        case GeckoProcessType_Content: {
+          // If passed in grab the application path for xpcom init
+          bool foundAppdir = false;
+          nsCString appDir;
+
+          for (int idx = aArgc; idx > 0; idx--) {
+            if (aArgv[idx] && !strcmp(aArgv[idx], "-embedlite")) {
+              startup::sIsEmbedlite = true;
+              continue;
+            }
+
+            if (aArgv[idx] && !strcmp(aArgv[idx], "-appdir")) {
+              MOZ_ASSERT(!foundAppdir);
+              if (foundAppdir) {
+                continue;
+              }
+              appDir.Assign(nsDependentCString(aArgv[idx+1]));
+              foundAppdir = true;
+            }
+          }
+
+          if (startup::sIsEmbedlite) {
+            // Embedlite process does not have shared content parent process with Gecko stuff, so these child should behave as normal Gecko default process
+            sChildProcessType = GeckoProcessType_Default;
+            process = new mozilla::embedlite::EmbedLiteContentProcess(parentPID);
+            static_cast<mozilla::embedlite::EmbedLiteContentProcess*>(process.get())->SetAppDir(appDir);
+          } else {
+            process = new ContentProcess(parentPID);
+          }
+        }
+        break;
 
         case GeckoProcessType_IPDLUnitTest:
 #ifdef MOZ_IPDL_TESTS
-- 
2.26.2

